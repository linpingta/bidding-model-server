// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ad_bid.proto

#include "ad_bid.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ad {
        template <typename>
PROTOBUF_CONSTEXPR BidRequest::BidRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.impressions_)*/ {},
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.publisher_)*/ nullptr,
      /*decltype(_impl_.site_)*/ nullptr,
      /*decltype(_impl_.device_)*/ nullptr,
      /*decltype(_impl_.user_)*/ nullptr,
    } {}
struct BidRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BidRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BidRequestDefaultTypeInternal() {}
  union {
    BidRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BidRequestDefaultTypeInternal _BidRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Publisher::Publisher(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct PublisherDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PublisherDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PublisherDefaultTypeInternal() {}
  union {
    Publisher _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PublisherDefaultTypeInternal _Publisher_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Site::Site(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SiteDefaultTypeInternal() {}
  union {
    Site _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SiteDefaultTypeInternal _Site_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Device::Device(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.os_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.model_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct DeviceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceDefaultTypeInternal() {}
  union {
    Device _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceDefaultTypeInternal _Device_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR User::User(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.gender_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.age_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct UserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserDefaultTypeInternal() {}
  union {
    User _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserDefaultTypeInternal _User_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Impression::Impression(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.ad_type_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.bid_floor_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ImpressionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImpressionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImpressionDefaultTypeInternal() {}
  union {
    Impression _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImpressionDefaultTypeInternal _Impression_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR BidResponse::BidResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.seat_bids_)*/ {},
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct BidResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BidResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BidResponseDefaultTypeInternal() {}
  union {
    BidResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BidResponseDefaultTypeInternal _BidResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SeatBid::SeatBid(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.bids_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SeatBidDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SeatBidDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SeatBidDefaultTypeInternal() {}
  union {
    SeatBid _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SeatBidDefaultTypeInternal _SeatBid_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Bid::Bid(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.imp_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.adid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.nurl_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.adm_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.price_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct BidDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BidDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BidDefaultTypeInternal() {}
  union {
    Bid _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BidDefaultTypeInternal _Bid_default_instance_;
}  // namespace ad
static ::_pb::Metadata file_level_metadata_ad_5fbid_2eproto[9];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ad_5fbid_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ad_5fbid_2eproto = nullptr;
const ::uint32_t TableStruct_ad_5fbid_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::ad::BidRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ad::BidRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ad::BidRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::ad::BidRequest, _impl_.publisher_),
    PROTOBUF_FIELD_OFFSET(::ad::BidRequest, _impl_.site_),
    PROTOBUF_FIELD_OFFSET(::ad::BidRequest, _impl_.device_),
    PROTOBUF_FIELD_OFFSET(::ad::BidRequest, _impl_.user_),
    PROTOBUF_FIELD_OFFSET(::ad::BidRequest, _impl_.impressions_),
    ~0u,
    0,
    1,
    2,
    3,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ad::Publisher, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ad::Publisher, _impl_.id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ad::Site, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ad::Site, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::ad::Site, _impl_.name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ad::Device, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ad::Device, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::ad::Device, _impl_.os_),
    PROTOBUF_FIELD_OFFSET(::ad::Device, _impl_.model_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ad::User, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ad::User, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::ad::User, _impl_.gender_),
    PROTOBUF_FIELD_OFFSET(::ad::User, _impl_.age_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ad::Impression, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ad::Impression, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::ad::Impression, _impl_.ad_type_),
    PROTOBUF_FIELD_OFFSET(::ad::Impression, _impl_.bid_floor_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ad::BidResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ad::BidResponse, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::ad::BidResponse, _impl_.seat_bids_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ad::SeatBid, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ad::SeatBid, _impl_.bids_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ad::Bid, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ad::Bid, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::ad::Bid, _impl_.imp_id_),
    PROTOBUF_FIELD_OFFSET(::ad::Bid, _impl_.price_),
    PROTOBUF_FIELD_OFFSET(::ad::Bid, _impl_.adid_),
    PROTOBUF_FIELD_OFFSET(::ad::Bid, _impl_.nurl_),
    PROTOBUF_FIELD_OFFSET(::ad::Bid, _impl_.adm_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 14, -1, sizeof(::ad::BidRequest)},
        {20, -1, -1, sizeof(::ad::Publisher)},
        {29, -1, -1, sizeof(::ad::Site)},
        {39, -1, -1, sizeof(::ad::Device)},
        {50, -1, -1, sizeof(::ad::User)},
        {61, -1, -1, sizeof(::ad::Impression)},
        {72, -1, -1, sizeof(::ad::BidResponse)},
        {82, -1, -1, sizeof(::ad::SeatBid)},
        {91, -1, -1, sizeof(::ad::Bid)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::ad::_BidRequest_default_instance_._instance,
    &::ad::_Publisher_default_instance_._instance,
    &::ad::_Site_default_instance_._instance,
    &::ad::_Device_default_instance_._instance,
    &::ad::_User_default_instance_._instance,
    &::ad::_Impression_default_instance_._instance,
    &::ad::_BidResponse_default_instance_._instance,
    &::ad::_SeatBid_default_instance_._instance,
    &::ad::_Bid_default_instance_._instance,
};
const char descriptor_table_protodef_ad_5fbid_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\014ad_bid.proto\022\002ad\"\253\001\n\nBidRequest\022\n\n\002id\030"
    "\001 \001(\t\022 \n\tpublisher\030\002 \001(\0132\r.ad.Publisher\022"
    "\026\n\004site\030\003 \001(\0132\010.ad.Site\022\032\n\006device\030\004 \001(\0132"
    "\n.ad.Device\022\026\n\004user\030\005 \001(\0132\010.ad.User\022#\n\013i"
    "mpressions\030\006 \003(\0132\016.ad.Impression\"\027\n\tPubl"
    "isher\022\n\n\002id\030\001 \001(\t\" \n\004Site\022\n\n\002id\030\001 \001(\t\022\014\n"
    "\004name\030\002 \001(\t\"/\n\006Device\022\n\n\002id\030\001 \001(\t\022\n\n\002os\030"
    "\002 \001(\t\022\r\n\005model\030\003 \001(\t\"/\n\004User\022\n\n\002id\030\001 \001(\t"
    "\022\016\n\006gender\030\002 \001(\t\022\013\n\003age\030\003 \001(\005\"<\n\nImpress"
    "ion\022\n\n\002id\030\001 \001(\t\022\017\n\007ad_type\030\002 \001(\t\022\021\n\tbid_"
    "floor\030\003 \001(\001\"9\n\013BidResponse\022\n\n\002id\030\001 \001(\t\022\036"
    "\n\tseat_bids\030\002 \003(\0132\013.ad.SeatBid\" \n\007SeatBi"
    "d\022\025\n\004bids\030\001 \003(\0132\007.ad.Bid\"Y\n\003Bid\022\n\n\002id\030\001 "
    "\001(\t\022\016\n\006imp_id\030\002 \001(\t\022\r\n\005price\030\003 \001(\001\022\014\n\004ad"
    "id\030\004 \001(\t\022\014\n\004nurl\030\005 \001(\t\022\013\n\003adm\030\006 \001(\t2;\n\017A"
    "dBidderService\022(\n\005bidAd\022\016.ad.BidRequest\032"
    "\017.ad.BidResponseb\006proto3"
};
static ::absl::once_flag descriptor_table_ad_5fbid_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ad_5fbid_2eproto = {
    false,
    false,
    664,
    descriptor_table_protodef_ad_5fbid_2eproto,
    "ad_bid.proto",
    &descriptor_table_ad_5fbid_2eproto_once,
    nullptr,
    0,
    9,
    schemas,
    file_default_instances,
    TableStruct_ad_5fbid_2eproto::offsets,
    file_level_metadata_ad_5fbid_2eproto,
    file_level_enum_descriptors_ad_5fbid_2eproto,
    file_level_service_descriptors_ad_5fbid_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ad_5fbid_2eproto_getter() {
  return &descriptor_table_ad_5fbid_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ad_5fbid_2eproto(&descriptor_table_ad_5fbid_2eproto);
namespace ad {
// ===================================================================

class BidRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<BidRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BidRequest, _impl_._has_bits_);
  static const ::ad::Publisher& publisher(const BidRequest* msg);
  static void set_has_publisher(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ad::Site& site(const BidRequest* msg);
  static void set_has_site(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ad::Device& device(const BidRequest* msg);
  static void set_has_device(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::ad::User& user(const BidRequest* msg);
  static void set_has_user(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::ad::Publisher& BidRequest::_Internal::publisher(const BidRequest* msg) {
  return *msg->_impl_.publisher_;
}
const ::ad::Site& BidRequest::_Internal::site(const BidRequest* msg) {
  return *msg->_impl_.site_;
}
const ::ad::Device& BidRequest::_Internal::device(const BidRequest* msg) {
  return *msg->_impl_.device_;
}
const ::ad::User& BidRequest::_Internal::user(const BidRequest* msg) {
  return *msg->_impl_.user_;
}
BidRequest::BidRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ad.BidRequest)
}
BidRequest::BidRequest(const BidRequest& from) : ::google::protobuf::Message() {
  BidRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.impressions_){from._impl_.impressions_},
      decltype(_impl_.id_){},
      decltype(_impl_.publisher_){nullptr},
      decltype(_impl_.site_){nullptr},
      decltype(_impl_.device_){nullptr},
      decltype(_impl_.user_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.publisher_ = new ::ad::Publisher(*from._impl_.publisher_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.site_ = new ::ad::Site(*from._impl_.site_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.device_ = new ::ad::Device(*from._impl_.device_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.user_ = new ::ad::User(*from._impl_.user_);
  }

  // @@protoc_insertion_point(copy_constructor:ad.BidRequest)
}
inline void BidRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.impressions_){arena},
      decltype(_impl_.id_){},
      decltype(_impl_.publisher_){nullptr},
      decltype(_impl_.site_){nullptr},
      decltype(_impl_.device_){nullptr},
      decltype(_impl_.user_){nullptr},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
BidRequest::~BidRequest() {
  // @@protoc_insertion_point(destructor:ad.BidRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BidRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.impressions_.~RepeatedPtrField();
  _impl_.id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.publisher_;
  if (this != internal_default_instance()) delete _impl_.site_;
  if (this != internal_default_instance()) delete _impl_.device_;
  if (this != internal_default_instance()) delete _impl_.user_;
}
void BidRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void BidRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ad.BidRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_impressions()->Clear();
  _impl_.id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.publisher_ != nullptr);
      _impl_.publisher_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.site_ != nullptr);
      _impl_.site_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.device_ != nullptr);
      _impl_.device_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.user_ != nullptr);
      _impl_.user_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BidRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 5, 24, 2> BidRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BidRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BidRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BidRequest, _impl_.id_)}},
    // .ad.Publisher publisher = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(BidRequest, _impl_.publisher_)}},
    // .ad.Site site = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(BidRequest, _impl_.site_)}},
    // .ad.Device device = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(BidRequest, _impl_.device_)}},
    // .ad.User user = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 3, PROTOBUF_FIELD_OFFSET(BidRequest, _impl_.user_)}},
    // repeated .ad.Impression impressions = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 4, PROTOBUF_FIELD_OFFSET(BidRequest, _impl_.impressions_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(BidRequest, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .ad.Publisher publisher = 2;
    {PROTOBUF_FIELD_OFFSET(BidRequest, _impl_.publisher_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ad.Site site = 3;
    {PROTOBUF_FIELD_OFFSET(BidRequest, _impl_.site_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ad.Device device = 4;
    {PROTOBUF_FIELD_OFFSET(BidRequest, _impl_.device_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ad.User user = 5;
    {PROTOBUF_FIELD_OFFSET(BidRequest, _impl_.user_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .ad.Impression impressions = 6;
    {PROTOBUF_FIELD_OFFSET(BidRequest, _impl_.impressions_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ad::Publisher>()},
    {::_pbi::TcParser::GetTable<::ad::Site>()},
    {::_pbi::TcParser::GetTable<::ad::Device>()},
    {::_pbi::TcParser::GetTable<::ad::User>()},
    {::_pbi::TcParser::GetTable<::ad::Impression>()},
  }}, {{
    "\15\2\0\0\0\0\0\0"
    "ad.BidRequest"
    "id"
  }},
};

::uint8_t* BidRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ad.BidRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ad.BidRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .ad.Publisher publisher = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::publisher(this),
        _Internal::publisher(this).GetCachedSize(), target, stream);
  }

  // .ad.Site site = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::site(this),
        _Internal::site(this).GetCachedSize(), target, stream);
  }

  // .ad.Device device = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::device(this),
        _Internal::device(this).GetCachedSize(), target, stream);
  }

  // .ad.User user = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::user(this),
        _Internal::user(this).GetCachedSize(), target, stream);
  }

  // repeated .ad.Impression impressions = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_impressions_size()); i < n; i++) {
    const auto& repfield = this->_internal_impressions().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ad.BidRequest)
  return target;
}

::size_t BidRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ad.BidRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ad.Impression impressions = 6;
  total_size += 1UL * this->_internal_impressions_size();
  for (const auto& msg : this->_internal_impressions()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .ad.Publisher publisher = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.publisher_);
    }

    // .ad.Site site = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.site_);
    }

    // .ad.Device device = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.device_);
    }

    // .ad.User user = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.user_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BidRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    BidRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*BidRequest::GetClassData() const { return &_class_data_; }


void BidRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BidRequest*>(&to_msg);
  auto& from = static_cast<const BidRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ad.BidRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_impressions()->MergeFrom(from._internal_impressions());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_publisher()->::ad::Publisher::MergeFrom(
          from._internal_publisher());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_site()->::ad::Site::MergeFrom(
          from._internal_site());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_device()->::ad::Device::MergeFrom(
          from._internal_device());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_user()->::ad::User::MergeFrom(
          from._internal_user());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BidRequest::CopyFrom(const BidRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ad.BidRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BidRequest::IsInitialized() const {
  return true;
}

void BidRequest::InternalSwap(BidRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.impressions_.InternalSwap(&other->_impl_.impressions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BidRequest, _impl_.user_)
      + sizeof(BidRequest::_impl_.user_)
      - PROTOBUF_FIELD_OFFSET(BidRequest, _impl_.publisher_)>(
          reinterpret_cast<char*>(&_impl_.publisher_),
          reinterpret_cast<char*>(&other->_impl_.publisher_));
}

::google::protobuf::Metadata BidRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ad_5fbid_2eproto_getter, &descriptor_table_ad_5fbid_2eproto_once,
      file_level_metadata_ad_5fbid_2eproto[0]);
}
// ===================================================================

class Publisher::_Internal {
 public:
};

Publisher::Publisher(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ad.Publisher)
}
Publisher::Publisher(const Publisher& from) : ::google::protobuf::Message() {
  Publisher* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:ad.Publisher)
}
inline void Publisher::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Publisher::~Publisher() {
  // @@protoc_insertion_point(destructor:ad.Publisher)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Publisher::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
}
void Publisher::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Publisher::Clear() {
// @@protoc_insertion_point(message_clear_start:ad.Publisher)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Publisher::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 23, 2> Publisher::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Publisher_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Publisher, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(Publisher, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\14\2\0\0\0\0\0\0"
    "ad.Publisher"
    "id"
  }},
};

::uint8_t* Publisher::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ad.Publisher)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ad.Publisher.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ad.Publisher)
  return target;
}

::size_t Publisher::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ad.Publisher)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Publisher::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Publisher::MergeImpl
};
const ::google::protobuf::Message::ClassData*Publisher::GetClassData() const { return &_class_data_; }


void Publisher::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Publisher*>(&to_msg);
  auto& from = static_cast<const Publisher&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ad.Publisher)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Publisher::CopyFrom(const Publisher& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ad.Publisher)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Publisher::IsInitialized() const {
  return true;
}

void Publisher::InternalSwap(Publisher* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
}

::google::protobuf::Metadata Publisher::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ad_5fbid_2eproto_getter, &descriptor_table_ad_5fbid_2eproto_once,
      file_level_metadata_ad_5fbid_2eproto[1]);
}
// ===================================================================

class Site::_Internal {
 public:
};

Site::Site(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ad.Site)
}
Site::Site(const Site& from) : ::google::protobuf::Message() {
  Site* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){},
      decltype(_impl_.name_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:ad.Site)
}
inline void Site::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){},
      decltype(_impl_.name_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Site::~Site() {
  // @@protoc_insertion_point(destructor:ad.Site)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Site::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.name_.Destroy();
}
void Site::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Site::Clear() {
// @@protoc_insertion_point(message_clear_start:ad.Site)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Site::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 22, 2> Site::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Site_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Site, _impl_.name_)}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Site, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(Site, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(Site, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\7\2\4\0\0\0\0\0"
    "ad.Site"
    "id"
    "name"
  }},
};

::uint8_t* Site::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ad.Site)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ad.Site.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ad.Site.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ad.Site)
  return target;
}

::size_t Site::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ad.Site)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Site::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Site::MergeImpl
};
const ::google::protobuf::Message::ClassData*Site::GetClassData() const { return &_class_data_; }


void Site::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Site*>(&to_msg);
  auto& from = static_cast<const Site&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ad.Site)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Site::CopyFrom(const Site& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ad.Site)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Site::IsInitialized() const {
  return true;
}

void Site::InternalSwap(Site* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
}

::google::protobuf::Metadata Site::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ad_5fbid_2eproto_getter, &descriptor_table_ad_5fbid_2eproto_once,
      file_level_metadata_ad_5fbid_2eproto[2]);
}
// ===================================================================

class Device::_Internal {
 public:
};

Device::Device(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ad.Device)
}
Device::Device(const Device& from) : ::google::protobuf::Message() {
  Device* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){},
      decltype(_impl_.os_){},
      decltype(_impl_.model_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  _impl_.os_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.os_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_os().empty()) {
    _this->_impl_.os_.Set(from._internal_os(), _this->GetArenaForAllocation());
  }
  _impl_.model_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.model_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model().empty()) {
    _this->_impl_.model_.Set(from._internal_model(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:ad.Device)
}
inline void Device::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){},
      decltype(_impl_.os_){},
      decltype(_impl_.model_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.os_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.os_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.model_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.model_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Device::~Device() {
  // @@protoc_insertion_point(destructor:ad.Device)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Device::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.os_.Destroy();
  _impl_.model_.Destroy();
}
void Device::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Device::Clear() {
// @@protoc_insertion_point(message_clear_start:ad.Device)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.os_.ClearToEmpty();
  _impl_.model_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Device::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 27, 2> Device::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Device_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Device, _impl_.id_)}},
    // string os = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Device, _impl_.os_)}},
    // string model = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Device, _impl_.model_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(Device, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string os = 2;
    {PROTOBUF_FIELD_OFFSET(Device, _impl_.os_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string model = 3;
    {PROTOBUF_FIELD_OFFSET(Device, _impl_.model_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\11\2\2\5\0\0\0\0"
    "ad.Device"
    "id"
    "os"
    "model"
  }},
};

::uint8_t* Device::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ad.Device)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ad.Device.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string os = 2;
  if (!this->_internal_os().empty()) {
    const std::string& _s = this->_internal_os();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ad.Device.os");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string model = 3;
  if (!this->_internal_model().empty()) {
    const std::string& _s = this->_internal_model();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ad.Device.model");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ad.Device)
  return target;
}

::size_t Device::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ad.Device)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string os = 2;
  if (!this->_internal_os().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_os());
  }

  // string model = 3;
  if (!this->_internal_model().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_model());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Device::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Device::MergeImpl
};
const ::google::protobuf::Message::ClassData*Device::GetClassData() const { return &_class_data_; }


void Device::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Device*>(&to_msg);
  auto& from = static_cast<const Device&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ad.Device)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_os().empty()) {
    _this->_internal_set_os(from._internal_os());
  }
  if (!from._internal_model().empty()) {
    _this->_internal_set_model(from._internal_model());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Device::CopyFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ad.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Device::IsInitialized() const {
  return true;
}

void Device::InternalSwap(Device* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.os_, lhs_arena,
                                       &other->_impl_.os_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.model_, lhs_arena,
                                       &other->_impl_.model_, rhs_arena);
}

::google::protobuf::Metadata Device::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ad_5fbid_2eproto_getter, &descriptor_table_ad_5fbid_2eproto_once,
      file_level_metadata_ad_5fbid_2eproto[3]);
}
// ===================================================================

class User::_Internal {
 public:
};

User::User(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ad.User)
}
User::User(const User& from) : ::google::protobuf::Message() {
  User* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){},
      decltype(_impl_.gender_){},
      decltype(_impl_.age_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  _impl_.gender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.gender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_gender().empty()) {
    _this->_impl_.gender_.Set(from._internal_gender(), _this->GetArenaForAllocation());
  }
  _this->_impl_.age_ = from._impl_.age_;

  // @@protoc_insertion_point(copy_constructor:ad.User)
}
inline void User::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){},
      decltype(_impl_.gender_){},
      decltype(_impl_.age_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.gender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.gender_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
User::~User() {
  // @@protoc_insertion_point(destructor:ad.User)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void User::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.gender_.Destroy();
}
void User::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void User::Clear() {
// @@protoc_insertion_point(message_clear_start:ad.User)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.gender_.ClearToEmpty();
  _impl_.age_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* User::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 24, 2> User::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_User_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.id_)}},
    // string gender = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.gender_)}},
    // int32 age = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User, _impl_.age_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.age_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string gender = 2;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.gender_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 age = 3;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.age_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\7\2\6\0\0\0\0\0"
    "ad.User"
    "id"
    "gender"
  }},
};

::uint8_t* User::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ad.User)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ad.User.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string gender = 2;
  if (!this->_internal_gender().empty()) {
    const std::string& _s = this->_internal_gender();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ad.User.gender");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 age = 3;
  if (this->_internal_age() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_age(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ad.User)
  return target;
}

::size_t User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ad.User)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string gender = 2;
  if (!this->_internal_gender().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_gender());
  }

  // int32 age = 3;
  if (this->_internal_age() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_age());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData User::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    User::MergeImpl
};
const ::google::protobuf::Message::ClassData*User::GetClassData() const { return &_class_data_; }


void User::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<User*>(&to_msg);
  auto& from = static_cast<const User&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ad.User)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_gender().empty()) {
    _this->_internal_set_gender(from._internal_gender());
  }
  if (from._internal_age() != 0) {
    _this->_internal_set_age(from._internal_age());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ad.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool User::IsInitialized() const {
  return true;
}

void User::InternalSwap(User* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gender_, lhs_arena,
                                       &other->_impl_.gender_, rhs_arena);
        swap(_impl_.age_, other->_impl_.age_);
}

::google::protobuf::Metadata User::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ad_5fbid_2eproto_getter, &descriptor_table_ad_5fbid_2eproto_once,
      file_level_metadata_ad_5fbid_2eproto[4]);
}
// ===================================================================

class Impression::_Internal {
 public:
};

Impression::Impression(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ad.Impression)
}
Impression::Impression(const Impression& from) : ::google::protobuf::Message() {
  Impression* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){},
      decltype(_impl_.ad_type_){},
      decltype(_impl_.bid_floor_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  _impl_.ad_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ad_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ad_type().empty()) {
    _this->_impl_.ad_type_.Set(from._internal_ad_type(), _this->GetArenaForAllocation());
  }
  _this->_impl_.bid_floor_ = from._impl_.bid_floor_;

  // @@protoc_insertion_point(copy_constructor:ad.Impression)
}
inline void Impression::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){},
      decltype(_impl_.ad_type_){},
      decltype(_impl_.bid_floor_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ad_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ad_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Impression::~Impression() {
  // @@protoc_insertion_point(destructor:ad.Impression)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Impression::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.ad_type_.Destroy();
}
void Impression::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Impression::Clear() {
// @@protoc_insertion_point(message_clear_start:ad.Impression)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.ad_type_.ClearToEmpty();
  _impl_.bid_floor_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Impression::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 31, 2> Impression::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Impression_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Impression, _impl_.id_)}},
    // string ad_type = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Impression, _impl_.ad_type_)}},
    // double bid_floor = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Impression, _impl_.bid_floor_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(Impression, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ad_type = 2;
    {PROTOBUF_FIELD_OFFSET(Impression, _impl_.ad_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double bid_floor = 3;
    {PROTOBUF_FIELD_OFFSET(Impression, _impl_.bid_floor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\15\2\7\0\0\0\0\0"
    "ad.Impression"
    "id"
    "ad_type"
  }},
};

::uint8_t* Impression::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ad.Impression)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ad.Impression.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string ad_type = 2;
  if (!this->_internal_ad_type().empty()) {
    const std::string& _s = this->_internal_ad_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ad.Impression.ad_type");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // double bid_floor = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_bid_floor = this->_internal_bid_floor();
  ::uint64_t raw_bid_floor;
  memcpy(&raw_bid_floor, &tmp_bid_floor, sizeof(tmp_bid_floor));
  if (raw_bid_floor != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_bid_floor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ad.Impression)
  return target;
}

::size_t Impression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ad.Impression)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string ad_type = 2;
  if (!this->_internal_ad_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ad_type());
  }

  // double bid_floor = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_bid_floor = this->_internal_bid_floor();
  ::uint64_t raw_bid_floor;
  memcpy(&raw_bid_floor, &tmp_bid_floor, sizeof(tmp_bid_floor));
  if (raw_bid_floor != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Impression::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Impression::MergeImpl
};
const ::google::protobuf::Message::ClassData*Impression::GetClassData() const { return &_class_data_; }


void Impression::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Impression*>(&to_msg);
  auto& from = static_cast<const Impression&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ad.Impression)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_ad_type().empty()) {
    _this->_internal_set_ad_type(from._internal_ad_type());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_bid_floor = from._internal_bid_floor();
  ::uint64_t raw_bid_floor;
  memcpy(&raw_bid_floor, &tmp_bid_floor, sizeof(tmp_bid_floor));
  if (raw_bid_floor != 0) {
    _this->_internal_set_bid_floor(from._internal_bid_floor());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Impression::CopyFrom(const Impression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ad.Impression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Impression::IsInitialized() const {
  return true;
}

void Impression::InternalSwap(Impression* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ad_type_, lhs_arena,
                                       &other->_impl_.ad_type_, rhs_arena);
        swap(_impl_.bid_floor_, other->_impl_.bid_floor_);
}

::google::protobuf::Metadata Impression::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ad_5fbid_2eproto_getter, &descriptor_table_ad_5fbid_2eproto_once,
      file_level_metadata_ad_5fbid_2eproto[5]);
}
// ===================================================================

class BidResponse::_Internal {
 public:
};

BidResponse::BidResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ad.BidResponse)
}
BidResponse::BidResponse(const BidResponse& from) : ::google::protobuf::Message() {
  BidResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.seat_bids_){from._impl_.seat_bids_},
      decltype(_impl_.id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:ad.BidResponse)
}
inline void BidResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.seat_bids_){arena},
      decltype(_impl_.id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
BidResponse::~BidResponse() {
  // @@protoc_insertion_point(destructor:ad.BidResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BidResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.seat_bids_.~RepeatedPtrField();
  _impl_.id_.Destroy();
}
void BidResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void BidResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ad.BidResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_seat_bids()->Clear();
  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BidResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 25, 2> BidResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BidResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .ad.SeatBid seat_bids = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BidResponse, _impl_.seat_bids_)}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BidResponse, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(BidResponse, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .ad.SeatBid seat_bids = 2;
    {PROTOBUF_FIELD_OFFSET(BidResponse, _impl_.seat_bids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ad::SeatBid>()},
  }}, {{
    "\16\2\0\0\0\0\0\0"
    "ad.BidResponse"
    "id"
  }},
};

::uint8_t* BidResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ad.BidResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ad.BidResponse.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .ad.SeatBid seat_bids = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_seat_bids_size()); i < n; i++) {
    const auto& repfield = this->_internal_seat_bids().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ad.BidResponse)
  return target;
}

::size_t BidResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ad.BidResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ad.SeatBid seat_bids = 2;
  total_size += 1UL * this->_internal_seat_bids_size();
  for (const auto& msg : this->_internal_seat_bids()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BidResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    BidResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*BidResponse::GetClassData() const { return &_class_data_; }


void BidResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BidResponse*>(&to_msg);
  auto& from = static_cast<const BidResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ad.BidResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_seat_bids()->MergeFrom(from._internal_seat_bids());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BidResponse::CopyFrom(const BidResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ad.BidResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BidResponse::IsInitialized() const {
  return true;
}

void BidResponse::InternalSwap(BidResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.seat_bids_.InternalSwap(&other->_impl_.seat_bids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
}

::google::protobuf::Metadata BidResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ad_5fbid_2eproto_getter, &descriptor_table_ad_5fbid_2eproto_once,
      file_level_metadata_ad_5fbid_2eproto[6]);
}
// ===================================================================

class SeatBid::_Internal {
 public:
};

SeatBid::SeatBid(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ad.SeatBid)
}
SeatBid::SeatBid(const SeatBid& from) : ::google::protobuf::Message() {
  SeatBid* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bids_){from._impl_.bids_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:ad.SeatBid)
}
inline void SeatBid::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.bids_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
SeatBid::~SeatBid() {
  // @@protoc_insertion_point(destructor:ad.SeatBid)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SeatBid::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bids_.~RepeatedPtrField();
}
void SeatBid::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SeatBid::Clear() {
// @@protoc_insertion_point(message_clear_start:ad.SeatBid)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_bids()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SeatBid::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SeatBid::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SeatBid_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .ad.Bid bids = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SeatBid, _impl_.bids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .ad.Bid bids = 1;
    {PROTOBUF_FIELD_OFFSET(SeatBid, _impl_.bids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ad::Bid>()},
  }}, {{
  }},
};

::uint8_t* SeatBid::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ad.SeatBid)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .ad.Bid bids = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bids_size()); i < n; i++) {
    const auto& repfield = this->_internal_bids().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ad.SeatBid)
  return target;
}

::size_t SeatBid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ad.SeatBid)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ad.Bid bids = 1;
  total_size += 1UL * this->_internal_bids_size();
  for (const auto& msg : this->_internal_bids()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SeatBid::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SeatBid::MergeImpl
};
const ::google::protobuf::Message::ClassData*SeatBid::GetClassData() const { return &_class_data_; }


void SeatBid::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SeatBid*>(&to_msg);
  auto& from = static_cast<const SeatBid&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ad.SeatBid)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_bids()->MergeFrom(from._internal_bids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SeatBid::CopyFrom(const SeatBid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ad.SeatBid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SeatBid::IsInitialized() const {
  return true;
}

void SeatBid::InternalSwap(SeatBid* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bids_.InternalSwap(&other->_impl_.bids_);
}

::google::protobuf::Metadata SeatBid::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ad_5fbid_2eproto_getter, &descriptor_table_ad_5fbid_2eproto_once,
      file_level_metadata_ad_5fbid_2eproto[7]);
}
// ===================================================================

class Bid::_Internal {
 public:
};

Bid::Bid(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ad.Bid)
}
Bid::Bid(const Bid& from) : ::google::protobuf::Message() {
  Bid* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){},
      decltype(_impl_.imp_id_){},
      decltype(_impl_.adid_){},
      decltype(_impl_.nurl_){},
      decltype(_impl_.adm_){},
      decltype(_impl_.price_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  _impl_.imp_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.imp_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_imp_id().empty()) {
    _this->_impl_.imp_id_.Set(from._internal_imp_id(), _this->GetArenaForAllocation());
  }
  _impl_.adid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.adid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_adid().empty()) {
    _this->_impl_.adid_.Set(from._internal_adid(), _this->GetArenaForAllocation());
  }
  _impl_.nurl_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nurl_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nurl().empty()) {
    _this->_impl_.nurl_.Set(from._internal_nurl(), _this->GetArenaForAllocation());
  }
  _impl_.adm_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.adm_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_adm().empty()) {
    _this->_impl_.adm_.Set(from._internal_adm(), _this->GetArenaForAllocation());
  }
  _this->_impl_.price_ = from._impl_.price_;

  // @@protoc_insertion_point(copy_constructor:ad.Bid)
}
inline void Bid::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){},
      decltype(_impl_.imp_id_){},
      decltype(_impl_.adid_){},
      decltype(_impl_.nurl_){},
      decltype(_impl_.adm_){},
      decltype(_impl_.price_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.imp_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.imp_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.adid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.adid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.nurl_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.nurl_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.adm_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.adm_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Bid::~Bid() {
  // @@protoc_insertion_point(destructor:ad.Bid)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Bid::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.imp_id_.Destroy();
  _impl_.adid_.Destroy();
  _impl_.nurl_.Destroy();
  _impl_.adm_.Destroy();
}
void Bid::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Bid::Clear() {
// @@protoc_insertion_point(message_clear_start:ad.Bid)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.imp_id_.ClearToEmpty();
  _impl_.adid_.ClearToEmpty();
  _impl_.nurl_.ClearToEmpty();
  _impl_.adm_.ClearToEmpty();
  _impl_.price_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Bid::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 34, 2> Bid::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Bid_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Bid, _impl_.id_)}},
    // string imp_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Bid, _impl_.imp_id_)}},
    // double price = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Bid, _impl_.price_)}},
    // string adid = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Bid, _impl_.adid_)}},
    // string nurl = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Bid, _impl_.nurl_)}},
    // string adm = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Bid, _impl_.adm_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(Bid, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string imp_id = 2;
    {PROTOBUF_FIELD_OFFSET(Bid, _impl_.imp_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double price = 3;
    {PROTOBUF_FIELD_OFFSET(Bid, _impl_.price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string adid = 4;
    {PROTOBUF_FIELD_OFFSET(Bid, _impl_.adid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string nurl = 5;
    {PROTOBUF_FIELD_OFFSET(Bid, _impl_.nurl_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string adm = 6;
    {PROTOBUF_FIELD_OFFSET(Bid, _impl_.adm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\6\2\6\0\4\4\3\0"
    "ad.Bid"
    "id"
    "imp_id"
    "adid"
    "nurl"
    "adm"
  }},
};

::uint8_t* Bid::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ad.Bid)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ad.Bid.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string imp_id = 2;
  if (!this->_internal_imp_id().empty()) {
    const std::string& _s = this->_internal_imp_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ad.Bid.imp_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // double price = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_price = this->_internal_price();
  ::uint64_t raw_price;
  memcpy(&raw_price, &tmp_price, sizeof(tmp_price));
  if (raw_price != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_price(), target);
  }

  // string adid = 4;
  if (!this->_internal_adid().empty()) {
    const std::string& _s = this->_internal_adid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ad.Bid.adid");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string nurl = 5;
  if (!this->_internal_nurl().empty()) {
    const std::string& _s = this->_internal_nurl();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ad.Bid.nurl");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string adm = 6;
  if (!this->_internal_adm().empty()) {
    const std::string& _s = this->_internal_adm();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ad.Bid.adm");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ad.Bid)
  return target;
}

::size_t Bid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ad.Bid)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string imp_id = 2;
  if (!this->_internal_imp_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_imp_id());
  }

  // string adid = 4;
  if (!this->_internal_adid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_adid());
  }

  // string nurl = 5;
  if (!this->_internal_nurl().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_nurl());
  }

  // string adm = 6;
  if (!this->_internal_adm().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_adm());
  }

  // double price = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_price = this->_internal_price();
  ::uint64_t raw_price;
  memcpy(&raw_price, &tmp_price, sizeof(tmp_price));
  if (raw_price != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Bid::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Bid::MergeImpl
};
const ::google::protobuf::Message::ClassData*Bid::GetClassData() const { return &_class_data_; }


void Bid::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Bid*>(&to_msg);
  auto& from = static_cast<const Bid&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ad.Bid)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_imp_id().empty()) {
    _this->_internal_set_imp_id(from._internal_imp_id());
  }
  if (!from._internal_adid().empty()) {
    _this->_internal_set_adid(from._internal_adid());
  }
  if (!from._internal_nurl().empty()) {
    _this->_internal_set_nurl(from._internal_nurl());
  }
  if (!from._internal_adm().empty()) {
    _this->_internal_set_adm(from._internal_adm());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_price = from._internal_price();
  ::uint64_t raw_price;
  memcpy(&raw_price, &tmp_price, sizeof(tmp_price));
  if (raw_price != 0) {
    _this->_internal_set_price(from._internal_price());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Bid::CopyFrom(const Bid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ad.Bid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Bid::IsInitialized() const {
  return true;
}

void Bid::InternalSwap(Bid* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.imp_id_, lhs_arena,
                                       &other->_impl_.imp_id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.adid_, lhs_arena,
                                       &other->_impl_.adid_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nurl_, lhs_arena,
                                       &other->_impl_.nurl_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.adm_, lhs_arena,
                                       &other->_impl_.adm_, rhs_arena);
        swap(_impl_.price_, other->_impl_.price_);
}

::google::protobuf::Metadata Bid::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ad_5fbid_2eproto_getter, &descriptor_table_ad_5fbid_2eproto_once,
      file_level_metadata_ad_5fbid_2eproto[8]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace ad
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
